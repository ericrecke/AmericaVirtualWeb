//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AmericaVirtual_Web.AmericaeReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AmericaeReference.IAmericaVirtualService")]
    public interface IAmericaVirtualService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/GetData", ReplyAction="http://tempuri.org/IAmericaVirtualService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/GetData", ReplyAction="http://tempuri.org/IAmericaVirtualService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IAmericaVirtualService/GetDataUsingDataContractResponse")]
        AmericaVirtualWS.CompositeType GetDataUsingDataContract(AmericaVirtualWS.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IAmericaVirtualService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<AmericaVirtualWS.CompositeType> GetDataUsingDataContractAsync(AmericaVirtualWS.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/ValidateLogin", ReplyAction="http://tempuri.org/IAmericaVirtualService/ValidateLoginResponse")]
        string ValidateLogin(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/ValidateLogin", ReplyAction="http://tempuri.org/IAmericaVirtualService/ValidateLoginResponse")]
        System.Threading.Tasks.Task<string> ValidateLoginAsync(string user, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/GetCountries", ReplyAction="http://tempuri.org/IAmericaVirtualService/GetCountriesResponse")]
        string GetCountries(int Id_Country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/GetCountries", ReplyAction="http://tempuri.org/IAmericaVirtualService/GetCountriesResponse")]
        System.Threading.Tasks.Task<string> GetCountriesAsync(int Id_Country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/GetProvinces", ReplyAction="http://tempuri.org/IAmericaVirtualService/GetProvincesResponse")]
        string GetProvinces(int Id_Province, int Id_Country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/GetProvinces", ReplyAction="http://tempuri.org/IAmericaVirtualService/GetProvincesResponse")]
        System.Threading.Tasks.Task<string> GetProvincesAsync(int Id_Province, int Id_Country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/GetUsers", ReplyAction="http://tempuri.org/IAmericaVirtualService/GetUsersResponse")]
        string GetUsers(int Id_User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/GetUsers", ReplyAction="http://tempuri.org/IAmericaVirtualService/GetUsersResponse")]
        System.Threading.Tasks.Task<string> GetUsersAsync(int Id_User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/GetWeathers", ReplyAction="http://tempuri.org/IAmericaVirtualService/GetWeathersResponse")]
        string GetWeathers(int Id_Weather, int Id_Province);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/GetWeathers", ReplyAction="http://tempuri.org/IAmericaVirtualService/GetWeathersResponse")]
        System.Threading.Tasks.Task<string> GetWeathersAsync(int Id_Weather, int Id_Province);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/AddModCountry", ReplyAction="http://tempuri.org/IAmericaVirtualService/AddModCountryResponse")]
        string AddModCountry(AmericaVirtual_DataModel.Countries model, bool delete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/AddModCountry", ReplyAction="http://tempuri.org/IAmericaVirtualService/AddModCountryResponse")]
        System.Threading.Tasks.Task<string> AddModCountryAsync(AmericaVirtual_DataModel.Countries model, bool delete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/AddModProvince", ReplyAction="http://tempuri.org/IAmericaVirtualService/AddModProvinceResponse")]
        string AddModProvince(AmericaVirtual_DataModel.Provinces model, bool delete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/AddModProvince", ReplyAction="http://tempuri.org/IAmericaVirtualService/AddModProvinceResponse")]
        System.Threading.Tasks.Task<string> AddModProvinceAsync(AmericaVirtual_DataModel.Provinces model, bool delete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/AddModUser", ReplyAction="http://tempuri.org/IAmericaVirtualService/AddModUserResponse")]
        string AddModUser(AmericaVirtual_DataModel.Users model, bool delete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmericaVirtualService/AddModUser", ReplyAction="http://tempuri.org/IAmericaVirtualService/AddModUserResponse")]
        System.Threading.Tasks.Task<string> AddModUserAsync(AmericaVirtual_DataModel.Users model, bool delete);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAmericaVirtualServiceChannel : AmericaVirtual_Web.AmericaeReference.IAmericaVirtualService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AmericaVirtualServiceClient : System.ServiceModel.ClientBase<AmericaVirtual_Web.AmericaeReference.IAmericaVirtualService>, AmericaVirtual_Web.AmericaeReference.IAmericaVirtualService {
        
        public AmericaVirtualServiceClient() {
        }
        
        public AmericaVirtualServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AmericaVirtualServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AmericaVirtualServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AmericaVirtualServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public AmericaVirtualWS.CompositeType GetDataUsingDataContract(AmericaVirtualWS.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<AmericaVirtualWS.CompositeType> GetDataUsingDataContractAsync(AmericaVirtualWS.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public string ValidateLogin(string user, string pass) {
            return base.Channel.ValidateLogin(user, pass);
        }
        
        public System.Threading.Tasks.Task<string> ValidateLoginAsync(string user, string pass) {
            return base.Channel.ValidateLoginAsync(user, pass);
        }
        
        public string GetCountries(int Id_Country) {
            return base.Channel.GetCountries(Id_Country);
        }
        
        public System.Threading.Tasks.Task<string> GetCountriesAsync(int Id_Country) {
            return base.Channel.GetCountriesAsync(Id_Country);
        }
        
        public string GetProvinces(int Id_Province, int Id_Country) {
            return base.Channel.GetProvinces(Id_Province, Id_Country);
        }
        
        public System.Threading.Tasks.Task<string> GetProvincesAsync(int Id_Province, int Id_Country) {
            return base.Channel.GetProvincesAsync(Id_Province, Id_Country);
        }
        
        public string GetUsers(int Id_User) {
            return base.Channel.GetUsers(Id_User);
        }
        
        public System.Threading.Tasks.Task<string> GetUsersAsync(int Id_User) {
            return base.Channel.GetUsersAsync(Id_User);
        }
        
        public string GetWeathers(int Id_Weather, int Id_Province) {
            return base.Channel.GetWeathers(Id_Weather, Id_Province);
        }
        
        public System.Threading.Tasks.Task<string> GetWeathersAsync(int Id_Weather, int Id_Province) {
            return base.Channel.GetWeathersAsync(Id_Weather, Id_Province);
        }
        
        public string AddModCountry(AmericaVirtual_DataModel.Countries model, bool delete) {
            return base.Channel.AddModCountry(model, delete);
        }
        
        public System.Threading.Tasks.Task<string> AddModCountryAsync(AmericaVirtual_DataModel.Countries model, bool delete) {
            return base.Channel.AddModCountryAsync(model, delete);
        }
        
        public string AddModProvince(AmericaVirtual_DataModel.Provinces model, bool delete) {
            return base.Channel.AddModProvince(model, delete);
        }
        
        public System.Threading.Tasks.Task<string> AddModProvinceAsync(AmericaVirtual_DataModel.Provinces model, bool delete) {
            return base.Channel.AddModProvinceAsync(model, delete);
        }
        
        public string AddModUser(AmericaVirtual_DataModel.Users model, bool delete) {
            return base.Channel.AddModUser(model, delete);
        }
        
        public System.Threading.Tasks.Task<string> AddModUserAsync(AmericaVirtual_DataModel.Users model, bool delete) {
            return base.Channel.AddModUserAsync(model, delete);
        }
    }
}
